{
    "readme":{
        "template": "[![view on npm](http:\/\/img.shields.io\/npm\/v\/handbrake-js.svg)](https:\/\/www.npmjs.org\/package\/handbrake-js)\n![npm module downloads per month](http:\/\/img.shields.io\/npm\/dm\/handbrake-js.svg)\n[![Build Status](https:\/\/travis-ci.org\/75lb\/handbrake-js.svg?branch=master)](https:\/\/travis-ci.org\/75lb\/handbrake-js)\n[![Dependency Status](https:\/\/david-dm.org\/75lb\/handbrake-js.svg)](https:\/\/david-dm.org\/75lb\/handbrake-js)\n![Analytics](https:\/\/ga-beacon.appspot.com\/UA-27725889-6\/handbrake-js\/README.md?pixel)\n\nhandbrake-js\n============\nHandbrake-js is a [node.js](http:\/\/nodejs.org) module wrapping [Handbrake](http:\/\/handbrake.fr) (v0.9.9) with a Javascript API, documented below. It's primary purpose is to bring video transcoding to your app.\n\nTested on Mac OSX, Ubuntu 14, Windows XP, Windows 8.1.\n\nInstallation\n============\nSystem Requirements\n-------------------\nJust [node.js](http:\/\/nodejs.org). Every else is installed automatically.\n\n*Mac \/ Linux users may need to run either of the following commands with `sudo`*.\n\nAs a library \n------------\nMove into your project directory then run: \n```sh\n$ npm install handbrake-js --save\n```\n\nAs a command-line app\n---------------------\nFrom any directory run the following:\n```sh\n$ npm install -g handbrake-js\n```\n\nNow, you can call `handbrake` as you would HandbrakeCLI, using all the usual [options](https:\/\/trac.handbrake.fr\/wiki\/CLIGuide). This command will transcode an AVI to the more universal H.264 (mp4):\n```sh\n$ handbrake --input \"some episode.avi\" --output \"some episode.mp4\" --preset Normal\n```\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \n\nAPI Documentation\n=================\n\nhandbrakeJs.spawn(options)\n--------------------------\n{{#with functions.[0]}}\n{{>function}}\n{{\/with}}",
        "data": {
    "classes": [
        {
            "name": "Handbrake",
            "description": "A thin wrapper on the handbrakeCLI child_process handle",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Handbrake",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "properties": [
                {
                    "name": "allOutput",
                    "access": "",
                    "virtual": false,
                    "description": "all handbrakeCLI output",
                    "type": ""
                },
                {
                    "name": "inProgress",
                    "access": "",
                    "virtual": false,
                    "description": "true when encoding",
                    "type": ""
                },
                {
                    "name": "options",
                    "access": "",
                    "virtual": false,
                    "description": "the options to encode with",
                    "type": ""
                }
            ],
            "functions": [
                {
                    "name": "run",
                    "access": "",
                    "virtual": false,
                    "description": "begin the encode.. attach desired listeners before running",
                    "parameters": [],
                    "examples": []
                }
            ],
            "events": [
                {
                    "name": "progress",
                    "access": "",
                    "virtual": false,
                    "description": "Fired at regular intervals passing progress information",
                    "parameters": [
                        {
                            "name": "progress",
                            "type": "Object",
                            "description": "",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "progress.percentComplete",
                            "type": "Number",
                            "description": "Percentage complete",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "progress.fps",
                            "type": "Number",
                            "description": "Frames per second",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "progress.avgFps",
                            "type": "Number",
                            "description": "Average frames per second",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "progress.eta",
                            "type": "String",
                            "description": "Estimated time until completion",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "progress.task",
                            "type": "String",
                            "description": "Task description, e.g. \"Encoding\", \"Scanning\" etc.",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "output",
                    "access": "",
                    "virtual": false,
                    "description": "output buffered as-is in allOutput, trimmed before delivery to caller.",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "error",
                    "access": "",
                    "virtual": false,
                    "description": "There are four classes of error",
                    "parameters": [
                        {
                            "name": "error",
                            "type": "Error",
                            "description": "",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "complete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired on completion of a successful encode",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "start",
                    "access": "",
                    "virtual": false,
                    "description": "fired when progress begins",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "HandbrakeOptions",
            "description": "",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "HandbrakeOptions",
                "description": "An options [Model](https://github.com/75lb/nature) describing all valid Handbrake option names, types and values.",
                "parameters": [],
                "examples": []
            }
        }
    ],
    "namespaces": [
        {
            "name": "progress",
            "description": "",
            "access": "",
            "virtual": false
        }
    ]
}

    }
}

